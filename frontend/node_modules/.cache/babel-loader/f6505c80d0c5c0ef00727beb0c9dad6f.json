{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\Pryecto\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Login from './components/Login';\nimport Upload from './components/Upload';\nimport Wall from './components/Wall';\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:5000/auth/checkAuth', {\n          credentials: 'include'\n        });\n        const data = await response.json();\n        setIsAuthenticated(data.isAuthenticated);\n      } catch (error) {\n        console.error('Failed to check authentication', error);\n      }\n    };\n    checkAuth();\n  }, []);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/React.createElement(Login, {\n      setIsAuthenticated: setIsAuthenticated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), isAuthenticated && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    path: \"/upload\",\n    element: /*#__PURE__*/React.createElement(Upload, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/wall\",\n    element: /*#__PURE__*/React.createElement(Wall, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 42\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Login","Upload","Wall","App","isAuthenticated","setIsAuthenticated","checkAuth","response","fetch","credentials","data","json","error","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Fragment"],"sources":["C:/Users/Bruno/Desktop/Pryecto/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Login from './components/Login';\r\nimport Upload from './components/Upload';\r\nimport Wall from './components/Wall';\r\n\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:5000/auth/checkAuth', {\r\n          credentials: 'include',\r\n        });\r\n        const data = await response.json();\r\n        setIsAuthenticated(data.isAuthenticated);\r\n      } catch (error) {\r\n        console.error('Failed to check authentication', error);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login setIsAuthenticated={setIsAuthenticated} />} />\r\n        {isAuthenticated && (\r\n          <>\r\n            <Route path=\"/upload\" element={<Upload />} />\r\n            <Route path=\"/wall\" element={<Wall />} />\r\n          </>\r\n        )}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AAEpC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACnEC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,kBAAkB,CAACK,IAAI,CAACN,eAAe,CAAC;MAC1C,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,KAAA,CAAAqB,aAAA,CAACjB,MAAM;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACL3B,KAAA,CAAAqB,aAAA,CAACf,MAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACL3B,KAAA,CAAAqB,aAAA,CAAChB,KAAK;IAACuB,IAAI,EAAC,GAAG;IAACC,OAAO,eAAE7B,KAAA,CAAAqB,aAAA,CAACd,KAAK;MAACK,kBAAkB,EAAEA,kBAAmB;MAAAU,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAC7EhB,eAAe,iBACdX,KAAA,CAAAqB,aAAA,CAAArB,KAAA,CAAA8B,QAAA,qBACE9B,KAAA,CAAAqB,aAAA,CAAChB,KAAK;IAACuB,IAAI,EAAC,SAAS;IAACC,OAAO,eAAE7B,KAAA,CAAAqB,aAAA,CAACb,MAAM;MAAAc,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC7C3B,KAAA,CAAAqB,aAAA,CAAChB,KAAK;IAACuB,IAAI,EAAC,OAAO;IAACC,OAAO,eAAE7B,KAAA,CAAAqB,aAAA,CAACZ,IAAI;MAAAa,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAE;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACxC,CAEE,CACF,CAAC;AAEb,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}